name: Build Dev/Prod Image

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - '.devcontainer/**'
      - 'package.json'
      - 'package-lock.json'
      - 'pnpm-lock.yaml'
      - 'contracts/**'
      - 'apps/**'
      - 'script/**'
      - '.github/workflows/build-image.yml'

permissions:
  contents: read
  packages: write   # needed to push to GHCR
  id-token: write   # not required here, but handy if you add keyless later

jobs:
  build:
    name: Build ${{ matrix.env }} image
    runs-on: ubuntu-latest
    strategy:
      matrix:
        env: [Dev, Prod]

    # Pull the right Variables/Secrets for each environment
    environment: ${{ matrix.env }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Compute tags
        id: meta
        run: |
          REPO="ghcr.io/${GITHUB_REPOSITORY,,}"       # lowercased
          ENV_TAG="${{ matrix.env }}"
          echo "IMAGE=${REPO}" >> $GITHUB_OUTPUT
          echo "TAG1=${ENV_TAG}" >> $GITHUB_OUTPUT
          echo "TAG2=${ENV_TAG}-${GITHUB_SHA}" >> $GITHUB_OUTPUT

      # Build + (optionally) push
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: .devcontainer/Dockerfile
          push: true
          provenance: false
          tags: |
            ${{ steps.meta.outputs.IMAGE }}:${{ steps.meta.outputs.TAG1 }}
            ${{ steps.meta.outputs.IMAGE }}:${{ steps.meta.outputs.TAG2 }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            USERNAME=vscode
            USER_UID=${{ matrix.env == 'dev' && vars.DEV_USER_UID || vars.PROD_USER_UID }}
            USER_GID=${{ matrix.env == 'dev' && vars.DEV_USER_GID || vars.PROD_USER_GID }}
